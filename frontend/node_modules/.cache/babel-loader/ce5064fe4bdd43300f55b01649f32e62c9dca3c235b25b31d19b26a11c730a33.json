{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed.sameem/Dev/authz-repo/authz/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(() => localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null);\n  const [authData, setAuthData] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const loginUser = async e => {\n    e.preventDefault();\n    const response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value\n      })\n    });\n    const data = await response.json();\n    if (data) {\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      setAuthData(data);\n      setCurrentUser(jwtDecode(data.access));\n      navigate('/');\n    } else {\n      alert('Something went wrong while logging in the user!');\n    }\n  };\n  const logoutUser = () => {\n    // e.preventDefault()\n    localStorage.removeItem('authTokens');\n    setAuthData(null);\n    setCurrentUser(null);\n    navigate('/login');\n  };\n  const updateToken = async () => {\n    const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        refresh: authData === null || authData === void 0 ? void 0 : authData.refresh\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthData(data);\n      setCurrentUser(jwtDecode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n    if (loading) {\n      setLoading(false);\n    }\n  };\n  const contextData = {\n    currentUser,\n    authData,\n    loginUser,\n    logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    const REFRESH_INTERVAL = 1000 * 60 * 4; // 4 minutes\n    let interval = setInterval(() => {\n      if (authData) {\n        updateToken();\n      }\n    }, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, [authData, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Omo+R8JIYbbZv42oACS3SXUBHf0=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","useNavigate","AuthContext","AuthProvider","children","currentUser","setCurrentUser","localStorage","getItem","authData","setAuthData","JSON","parse","loading","setLoading","navigate","loginUser","e","preventDefault","response","fetch","method","headers","body","stringify","username","target","value","password","data","json","setItem","access","alert","logoutUser","removeItem","updateToken","refresh","status","contextData","REFRESH_INTERVAL","interval","setInterval","clearInterval"],"sources":["/Users/mohamed.sameem/Dev/authz-repo/authz/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(() =>\n    localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null\n  );\n  const [authData, setAuthData] = useState(() =>\n    localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null\n  );\n  const [loading, setLoading] = useState(true);\n\n  const navigate = useNavigate();\n\n  const loginUser = async (e) => {\n    e.preventDefault();\n    const response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ username: e.target.username.value, password: e.target.password.value })\n    });\n\n    const data = await response.json();\n\n    if (data) {\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      setAuthData(data);\n      setCurrentUser(jwtDecode(data.access));\n      navigate('/');\n    } else {\n      alert('Something went wrong while logging in the user!');\n    }\n  };\n\n  const logoutUser = () => {\n    // e.preventDefault()\n    localStorage.removeItem('authTokens');\n    setAuthData(null);\n    setCurrentUser(null);\n    navigate('/login');\n  };\n\n  const updateToken = async () => {\n    const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ refresh: authData?.refresh })\n    });\n\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthData(data);\n      setCurrentUser(jwtDecode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n\n    if (loading) {\n      setLoading(false);\n    }\n  };\n\n  const contextData = {\n    currentUser,\n    authData,\n    loginUser,\n    logoutUser,\n  };\n\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n\n    const REFRESH_INTERVAL = 1000 * 60 * 4; // 4 minutes\n    let interval = setInterval(() => {\n      if (authData) {\n        updateToken();\n      }\n    }, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, [authData, loading]);\n\n  return (\n    <AuthContext.Provider value={contextData}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}