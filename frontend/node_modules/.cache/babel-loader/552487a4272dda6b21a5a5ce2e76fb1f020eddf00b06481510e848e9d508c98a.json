{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed.sameem/Dev/authz-repo/authz/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null);\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const loginUser = async e => {\n    try {\n      e.preventDefault();\n      const response = await fetch('http://127.0.0.1:8000/api/token/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: e.target.username.value,\n          password: e.target.password.value\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('authTokens', JSON.stringify(data));\n        setAuthTokens(data);\n        setUser(jwtDecode(data.access));\n        navigate('/');\n      } else {\n        console.error('Failed to login:', response.statusText);\n        alert('Something went wrong while logging in the user!');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  const logoutUser = () => {\n    localStorage.removeItem('authTokens');\n    setAuthTokens(null);\n    setUser(null);\n    navigate('/login');\n    // Optionally, display a message to the user\n  };\n\n  // Add your updateToken function here to handle token refreshing\n\n  const contextData = {\n    user,\n    authTokens,\n    loginUser,\n    logoutUser\n  };\n\n  // ... Rest of your code\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"+ZUDfnqQYywGQrLZAa+pxVly8Bk=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwtDecode","useNavigate","AuthContext","AuthProvider","children","user","setUser","localStorage","getItem","authTokens","setAuthTokens","JSON","parse","loading","setLoading","navigate","loginUser","e","preventDefault","response","fetch","method","headers","body","stringify","username","target","value","password","ok","data","json","setItem","access","console","error","statusText","alert","logoutUser","removeItem","contextData"],"sources":["/Users/mohamed.sameem/Dev/authz-repo/authz/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(() =>\n    localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null\n  );\n  const [authTokens, setAuthTokens] = useState(() =>\n    localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null\n  );\n  const [loading, setLoading] = useState(true);\n\n  const navigate = useNavigate();\n\n  const loginUser = async (e) => {\n    try {\n      e.preventDefault();\n      const response = await fetch('http://127.0.0.1:8000/api/token/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username: e.target.username.value, password: e.target.password.value }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('authTokens', JSON.stringify(data));\n        setAuthTokens(data);\n        setUser(jwtDecode(data.access));\n        navigate('/');\n      } else {\n        console.error('Failed to login:', response.statusText);\n        alert('Something went wrong while logging in the user!');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n\n  const logoutUser = () => {\n    localStorage.removeItem('authTokens');\n    setAuthTokens(null);\n    setUser(null);\n    navigate('/login');\n    // Optionally, display a message to the user\n  };\n\n  // Add your updateToken function here to handle token refreshing\n\n  const contextData = {\n    user,\n    authTokens,\n    loginUser,\n    logoutUser,\n  };\n\n  // ... Rest of your code\n\n  return <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>;\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,WAAW,gBAAGL,aAAa,EAAE;AAEnC,eAAeK,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,MAC/BS,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGR,SAAS,CAACO,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAC1F;EACD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,MAC3CS,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAC3F;EACD,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMiB,QAAQ,GAAGd,WAAW,EAAE;EAE9B,MAAMe,SAAS,GAAG,MAAOC,CAAC,IAAK;IAC7B,IAAI;MACFA,CAAC,CAACC,cAAc,EAAE;MAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEZ,IAAI,CAACa,SAAS,CAAC;UAAEC,QAAQ,EAAER,CAAC,CAACS,MAAM,CAACD,QAAQ,CAACE,KAAK;UAAEC,QAAQ,EAAEX,CAAC,CAACS,MAAM,CAACE,QAAQ,CAACD;QAAM,CAAC;MAC/F,CAAC,CAAC;MAEF,IAAIR,QAAQ,CAACU,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,EAAE;QAClCxB,YAAY,CAACyB,OAAO,CAAC,YAAY,EAAErB,IAAI,CAACa,SAAS,CAACM,IAAI,CAAC,CAAC;QACxDpB,aAAa,CAACoB,IAAI,CAAC;QACnBxB,OAAO,CAACN,SAAS,CAAC8B,IAAI,CAACG,MAAM,CAAC,CAAC;QAC/BlB,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACLmB,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEhB,QAAQ,CAACiB,UAAU,CAAC;QACtDC,KAAK,CAAC,iDAAiD,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAMG,UAAU,GAAG,MAAM;IACvB/B,YAAY,CAACgC,UAAU,CAAC,YAAY,CAAC;IACrC7B,aAAa,CAAC,IAAI,CAAC;IACnBJ,OAAO,CAAC,IAAI,CAAC;IACbS,QAAQ,CAAC,QAAQ,CAAC;IAClB;EACF,CAAC;;EAED;;EAEA,MAAMyB,WAAW,GAAG;IAClBnC,IAAI;IACJI,UAAU;IACVO,SAAS;IACTsB;EACF,CAAC;;EAED;;EAEA,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEE,WAAY;IAAA,UAAEpC;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AACpF,CAAC;AAAC,GAzDWD,YAAY;EAAA,QASNF,WAAW;AAAA;AAAA,KATjBE,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}